#
# Makefile fragment for regression tests.
# Do not invoke directly; use main Makefile instead.
#

test_static	= icnscvt-test-static
test_shared	= icnscvt-test-shared
test_src	= test
test_obj	= ${test_src}/.build

test_srcs	= \
		${test_src}/test_icns.c \
		${test_src}/test_io.c \
		${test_src}/test_io_file.c \
		${test_src}/test_io_filesystem.c \
		${test_src}/test_image.c \
		${test_src}/test_targa.c \
		${test_src}/test_jp2.c \
		${test_src}/test_png.c \
		${test_src}/test_format.c \
		${test_src}/test_format_png.c \
		${test_src}/test_format_mask.c \
		${test_src}/test_format_argb.c \

# format_1bpp
# format_4bpp
# format_8bpp
# icns/iconset/external

test_api_srcs	= \
		${test_src}/test_api.c \
		${test_src}/test_api_format.c \
		${test_src}/test_api_external.c \

# api (group similar calls into their own compilation units?)
# cli

test_objs	= \
		${test_obj}/test.o \
		${test_obj}/targa.o \
		${test_obj}/target.o \
		${test_obj}/format.o \
		$(patsubst %.c,%.o,$(patsubst ${test_src}/%,${test_obj}/%,${test_srcs})) \
		$(patsubst %.c,%.o,$(patsubst ${test_src}/%,${test_obj}/%,${test_api_srcs})) \

test_shared_objs = \
		${test_obj}/test.lo \
		${test_obj}/target.lo \
		${test_obj}/targa.lo \
		${src_obj}/icns.lo \
		${src_obj}/icns_io.lo \
		${src_obj}/icns_image.lo \
		${src_obj}/icns_png.lo \
		$(patsubst %.c,%.lo,$(patsubst ${test_src}/%,${test_obj}/%,${test_api_srcs})) \

test: ${test_static} ${test_shared}
	set -e; cd test/tmp; for f in *; do [ "$$f" = "README" ] || rm -r "$$f"; done
	./${test_static}
	LD_LIBRARY_PATH="." ./${test_shared}

check: test

.PHONY: test check clean test_clean

${test_obj}:
	${MKDIR} "$@"

${test_obj}/%.o: ${test_src}/%.c
	${CC} -MD -MF $@.d ${CFLAGS} ${static_cflags} -c $< -o $@

${test_obj}/%.lo: ${test_src}/%.c
	${CC} -MD -MF $@.d ${CFLAGS} ${shared_cflags} -c $< -o $@

${test_src}/testdecls.h: ${test_srcs}
	echo '#include "test.h"' >$@; \
	for f in ${test_srcs}; do \
		grep UNITTEST "$$f" | sed 's/UNITTEST/UNITDECL/g' >>$@; \
	done

${test_src}/testdeclsapi.h: ${test_api_srcs}
	echo '#include "test.h"' >$@; \
	for f in ${test_api_srcs}; do \
		grep UNITTEST "$$f" | sed 's/UNITTEST/UNITDECL/g' >>$@; \
	done

# Make ${test_obj} if it does not exist.
${test_objs} ${test_shared_objs}: $(filter-out $(wildcard ${test_obj}), ${test_obj})

-include ${test_objs:.o=.o.d}
-include ${test_shared_objs:.lo=.lo.d}

${test_static}: ${test_objs} ${static_target}
	${CC} ${LDFLAGS} $^ -o $@ ${LIBS} -lz

${test_shared}: ${test_shared_objs} ${shared_target}
	${CC} ${LDFLAGS} ${test_shared_objs} -o $@ -L${LIBDIR} -licnscvt ${LIBS} -lz

test_clean:
	${RM} -f ${test_static}
	${RM} -f ${test_shared}
	${RM} -rf ${test_obj}

clean: test_clean
